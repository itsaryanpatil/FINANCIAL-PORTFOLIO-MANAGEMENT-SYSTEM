--USER:
 
CREATE TABLE USER(
PAN_ID VARCHAR(20),
NAME VARCHAR(20),
DATE_OF_BIRTH DATE,
ADDRESS VARCHAR(30),
EMAIL VARCHAR(30),
PHONE_NO VARCHAR(10),
PRIMARY KEY(PAN_ID)
);

pragma table_info('user');

 
--PORTFOLIO:
 
CREATE TABLE PORTFOLIO(
PORTFOLIO_ID VARCHAR(10),
PAN_ID VARCHAR(10),
PORTFOLIO_NAME VARCHAR(20),
DATE_OF_CREATION DATE,
PRIMARY KEY(PORTFOLIO_ID),
FOREIGN KEY (PAN_ID) REFERENCES USER(PAN_ID)
);

pragma table_info(‘portfolio’);

 

 
--TRANSACTIONS:
 
CREATE TABLE TRANSACTIONS(
TRANSACTION_ID VARCHAR(10),
PORTFOLIO_ID VARCHAR(10),
AMOUNT FLOAT,
ASSET_TYPE VARCHAR(10),
TRANSACTION_DATE DATE,
PRIMARY KEY (TRANSACTION_ID),
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(PORTFOLIO_ID)
);

pragma table_info('transactions');
 
--STOCK_BUY:

CREATE TABLE STOCK_BUY( 
TRANSACTION_ID VARCHAR(10), 
QUANTITY INT, 
DUMMY_QUANTITY INT,
ISIN VARCHAR(12), 
PRIMARY KEY(TRANSACTION_ID, ISIN), 
FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS (TRANSACTION_ID) 
);

pragma table_info('stock_buy');
 

--STOCK_SELL:

CREATE TABLE STOCK_SELL( 
TRANSACTION_ID VARCHAR(10), 
QUANTITY INT, 
ISIN VARCHAR(12), 
PRIMARY KEY(TRANSACTION_ID, ISIN), 
FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS (TRANSACTION_ID) 
);

pragma table_info('stock_sell');
 
--STOCKS:

CREATE TABLE STOCKS( 
ISIN VARCHAR(12), 
PORTFOLIO_ID VARCHAR(10), 
TOTAL_QUANTITY INT, 
AVERAGE_PRICE_PER_SHARE FLOAT, 
NET_GAIN FLOAT, 
PRIMARY KEY(PORTFOLIO_ID, ISIN), 
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(PORTFOLIO_ID) 
);

pragma table_info('stocks');
 

--STOCK_INFO:

CREATE TABLE STOCK_INFO( 
ISIN VARCHAR(12), 
STOCK_NAME VARCHAR(30), 
CURRENT_VALUE FLOAT, 
P_E_RATIO FLOAT, 
PRIMARY KEY(ISIN) 
);

 
--FIXED_DEPOSITS:

CREATE TABLE FIXED_DEPOSITS( 
STARTING_DATE DATE, 
ACCOUNT_NO VARCHAR(20), 
DURATION FLOAT, 
BANK VARCHAR(30), 
RETURN_ON_INVESTMENT FLOAT, 
PORTFOLIO_ID VARCHAR(10), 
AMOUNT FLOAT,
PRIMARY KEY (PORTFOLIO_ID, ACCOUNT_NO), 
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO (PORTFOLIO_ID) 
);

pragma table_info('fixed_deposits');
 

--GOVT_BONDS:

CREATE TABLE GOVT_BONDS( 
BOND_ID VARCHAR(10), 
STARTING_DATE DATE, 
AMOUNT FLOAT, 
DURATION FLOAT, 
RETURN_ON_INVESTMENT FLOAT,
PORTFOLIO_ID VARCHAR(10), 
PRIMARY KEY (PORTFOLIO_ID, BOND_ID), 
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO (PORTFOLIO_ID) 
);

pragma table_info('govt_bonds');

 

--SCHEMES
CREATE TABLE SCHEMES(
CURRENT_NAV FLOAT,
DEBT_ISSUER VARCHAR(40),
PRIMARY KEY(DEBT_ISSUER)
);
pragma table_info('schemes');

 

--MUTUAL_FUNDS
CREATE TABLE MUTUAL_FUNDS(
BALANCE_UNITS FLOAT,
DEBT_ISSUER VARCHAR(40),
STARTING_DATE DATE,
FOLIO_ID VARCHAR(10),
PORTFOLIO_ID VARCHAR(10),
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(PORTFOLIO_ID),
FOREIGN KEY(DEBT_ISSUER) REFERENCES SCHEMES(DEBT_ISSUER),
PRIMARY KEY(FOLIO_ID,PORTFOLIO_ID)
);
pragma table_info('mutual_funds');

 
--MF_UNITS_SELL
CREATE TABLE MF_UNITS_SELL	(
QUANTITY FLOAT,
TRANSACTION_ID VARCHAR(10),
FOLIO_ID VARCHAR(10),
  PORTFOLIO_ID VARCHAR(10),
FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(PORTFOLIO_ID),
PRIMARY KEY(TRANSACTION_ID,PORTFOLIO_ID,FOLIO_ID)
);
pragma table_info('mf_units_sell');
 
--SIP
CREATE TABLE SIP(
INSTALLMENT_DATE DATE,
QUANTITY_BOUGHT FLOAT,
  	QUANTITY_REVISED FLOAT,
NAV FLOAT,
FOLIO_ID VARCHAR(10),
  PORTFOLIO_ID VARCHAR(10),
FOREIGN KEY(FOLIO_ID,PORTFOLIO_ID) REFERENCES MUTUAL_FUNDS(FOLIO_ID,PORTFOLIO_ID),
 
PRIMARY KEY(FOLIO_ID,PORTFOLIO_ID,INSTALLMENT_DATE)
);
pragma table_info('sip');


 


--SQL QUERIES

--ALL USERS HERE
insert into USER VALUES('APPHP9989S','ARYAN PATIL','2004-03-08','MUMBAI','aryan@gmail.com',8768343423);
insert into USER VALUES('SVFBR34Y7A','SHRUTI VANKA','2004-08-08','HYDERABAD','shruti@gmail.com',4364643465);
insert into USER VALUES('KSKKK9969P','KRITI SINHA','2004-12-09','THAPAR','ks_3@gmail.com',1346513443);
insert into USER VALUES('SPTRS3124B','SHUBHAM PAHILWANI','2005-02-09','JAIPUR','shub@gmail.com',869844739);
insert into USER VALUES('CKDVD4981A','CHETAN KAR','2004-04-05','BANGALORE','chetan@gmail.com',4871234093);

SELECT * FROM USER;

 

--ALL PORTFOLIOS HERE
insert into PORTFOLIO VALUES('AP101','APPHP9989S','TRIAL_FOLIO','2024-01-26');
insert into PORTFOLIO VALUES('AP102','APPHP9989S','EATING_OUT','2024-02-27');
insert into PORTFOLIO VALUES('SV101','SVFBR34Y7A','GUITAR_FOLIO','2024-01-16');
insert into PORTFOLIO VALUES('SV102','SVFBR34Y7A','BASS_FOLIO','2024-02-17');
INSERT INTO PORTFOLIO VALUES('KS101','KSKKK9969P','BA_FOLIO','2024-02-17');
insert into PORTFOLIO VALUES('SP101','SPTRS3124B','BIRYANI_FOLIO','2024-03-08');
insert into PORTFOLIO VALUES('CK101','CKDVD4981A','BATMAN_FOLIO','2024-01-12');

SELECT * FROM PORTFOLIO;

 


--STEP-WISE FOR EVERY OPERATION NOW

-- BUYING 10 STOCKS OF INFOSYS FOR THE 1ST TIME 
INSERT INTO TRANSACTIONS VALUES('TAPST101','AP101',1000,'STOCKS','2024-03-16');

 

INSERT INTO STOCK_BUY VALUES('TAPST101',10,0,'INE009A01021');
 
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TAPST101';
 

INSERT INTO STOCKS VALUES('INE009A01021','AP101',0,0,0);
 

INSERT INTO STOCK_INFO VALUES('INE009A01021','INFOSYS',1490.25,25.68);
 

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';
 

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
) WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';

 

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101')
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101';
 
 
-- BUYING ANOTHER 10 STOCKS OF INFOSYS AT A DIFFERENT PRICE
INSERT INTO TRANSACTIONS VALUES('TAPST102','AP101',2000,'STOCKS','2024-03-17');

INSERT INTO STOCK_BUY VALUES('TAPST102',10,0,'INE009A01021');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TAPST102';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
) WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101')
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101';

 

-- SELLING 13 STOCKS OF INFOSYS USING FIFO MECHANISM

INSERT INTO TRANSACTIONS VALUES('TSTAP101','AP101',-13000,'STOCKS','2024-03-17');

INSERT INTO STOCK_SELL VALUES('TSTAP101',13,'INE009A01021');

 

UPDATE STOCK_BUY SET dummy_quantity = 0 WHERE TRANSACTION_ID = 'TAPST101';
UPDATE STOCK_BUY SET dummy_quantity = 7 WHERE TRANSACTION_ID = 'TAPST102';

 

--As it can be seen changes made according to FIFO mechanism in stocks

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101')
) WHERE ISIN = 'INE009A01021' AND portfolio_id = 'AP101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101')
WHERE STOCKS.ISIN = 'INE009A01021' AND PORTFOLIO_ID = 'AP101';

 

-- BUYING 10 STOCKS OF RELIANCE FOR ANOTHER USER

INSERT INTO TRANSACTIONS VALUES('TSVST101','SV101',30000,'STOCKS','2024-02-03');

INSERT INTO STOCK_BUY VALUES('TSVST101',10,0,'INE002A01018');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSVST101';

INSERT INTO STOCKS VALUES('INE002A01018','SV101',0,0,0);

INSERT INTO STOCK_INFO VALUES('INE002A01018','RELIANCE',2983.65,39.19);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
) WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'SV101')
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'SV101';

-- BUYING 5 MORE STOCKS OF RELIANCE FOR THIS USER

INSERT INTO TRANSACTIONS VALUES('TSVST102','SV101',12000,'STOCKS','2024-02-04');

INSERT INTO STOCK_BUY VALUES('TSVST102',5,0,'INE002A01018');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSVST102';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101')
) WHERE ISIN = 'INE002A01018' AND portfolio_id = 'SV101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'SV101')
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'SV101';

-- 1st user is buying a few stocks of reliance now

INSERT INTO TRANSACTIONS VALUES('TAPST104','AP101',13000,'STOCKS','2024-02-07');

INSERT INTO STOCK_BUY VALUES('TAPST104',6,0,'INE002A01018');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TAPST104';

select * from stock_buy;

INSERT INTO STOCKS VALUES('INE002A01018','AP101',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'AP101';

select * from stocks;

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'AP101')
WHERE ISIN = 'INE002A01018' AND portfolio_id = 'AP101')
) WHERE ISIN = 'INE002A01018' AND portfolio_id = 'AP101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'AP101')
WHERE STOCKS.ISIN = 'INE002A01018' AND PORTFOLIO_ID = 'AP101';

-- lets get count of how many total portfolios have this stock
select STOCK_NAME, count(PORTFOLIO_ID) AS NO_OF_PORTFOLIOS from 
STOCK_INFO JOIN
stocks ON STOCKS.ISIN = STOCK_INFO.ISIN group by STOCKS.isin having STOCKS.ISIN = 'INE002A01018';

 

-- total stocks bought by multiple users for reliance

select STOCK_NAME, sum(total_quantity) from 
STOCK_INFO JOIN
stocks ON STOCKS.ISIN = STOCK_INFO.ISIN group by STOCKS.isin having STOCKS.isin = 'INE002A01018';

 

-- buying a few stocks of hdfc bank by 1st user but different portfolio

INSERT INTO TRANSACTIONS VALUES('TAPST105','AP102',12000,'STOCKS','2024-02-07');

insert into STOCK_BUY VALUES('TAPST105',8,0,'INE0040A01034');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TAPST105';

insert into stock_info values('INE0040A01034', 'HDFC BANK',1445.70,23.92);

insert into STOCKS values('INE0040A01034','AP102',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE0040A01034' AND portfolio_id = 'AP102')
WHERE ISIN = 'INE0040A01034' AND portfolio_id = 'AP102';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE0040A01034' AND portfolio_id = 'AP102')
WHERE ISIN = 'INE0040A01034' AND portfolio_id = 'AP102')
) WHERE ISIN = 'INE0040A01034' AND portfolio_id = 'AP102';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE0040A01034' AND PORTFOLIO_ID = 'AP102')
WHERE STOCKS.ISIN = 'INE0040A01034' AND PORTFOLIO_ID = 'AP102';

SELECT * FROM STOCKS;

-- LETS GET TOTAL NUMBER OF STOCKS OWNED BY THE SAME USER IN ALL PORTFOLIOS, PAN_ID WISE

SELECT PORTFOLIO.PAN_ID, COUNT(ISIN) AS NUMBER_OF_COMPANIES FROM 
STOCKS JOIN PORTFOLIO ON STOCKS.PORTFOLIO_ID = PORTFOLIO.PORTFOLIO_ID 
GROUP BY PORTFOLIO.PAN_ID
HAVING PORTFOLIO.PAN_ID = 'APPHP9989S';



 

-- USER’S NAME WISE

SELECT USER.NAME AS USERNAME, COUNT(ISIN) AS NUMBER_OF_COMPANIES FROM 
STOCKS JOIN PORTFOLIO ON STOCKS.PORTFOLIO_ID = PORTFOLIO.PORTFOLIO_ID 
JOIN USER ON PORTFOLIO.PAN_ID = USER.PAN_ID
GROUP BY PORTFOLIO.PAN_ID
HAVING USER.NAME = 'SHRUTI VANKA';

 

-- 2ND USER BUYS STOCKS OF ZOMATO

INSERT INTO TRANSACTIONS VALUES('TSVST201','SV101',3400,'STOCKS','2023-11-05');

insert into STOCK_BUY VALUES('TSVST201',8,0,'INE758T01015');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSVST201';

insert into stock_info values('INE758T01015', 'ZOMATO',179.65,847.98);

insert into STOCKS values('INE758T01015','SV101',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
) WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE758T01015' AND PORTFOLIO_ID = 'SV101')
WHERE STOCKS.ISIN = 'INE758T01015' AND PORTFOLIO_ID = 'SV101';

-- TOTAL UNREALISED GAIN FOR ARYAN PATIL

SELECT USER.NAME AS USERNAME,SUM(NET_GAIN) AS UNREALISED_GAIN_STOCKS FROM 
STOCKS JOIN PORTFOLIO ON STOCKS.PORTFOLIO_ID = PORTFOLIO.PORTFOLIO_ID 
JOIN USER ON PORTFOLIO.PAN_ID = USER.PAN_ID
GROUP BY PORTFOLIO.PAN_ID
HAVING USER.NAME = 'ARYAN PATIL';

 
        
-- 2ND USER SELLING SOME STOCKS

INSERT INTO TRANSACTIONS VALUES('TSTSV201','SV101',-2000,'STOCKS','2023-11-09');

INSERT INTO STOCK_SELL VALUES('TSTSV201',4,'INE758T01015');

UPDATE STOCK_BUY SET dummy_quantity = 4 WHERE transaction_id = 'TSVST201';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101')
) WHERE ISIN = 'INE758T01015' AND portfolio_id = 'SV101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE758T01015' AND PORTFOLIO_ID = 'SV101')
WHERE STOCKS.ISIN = 'INE758T01015' AND PORTFOLIO_ID = 'SV101';

-- BUYING A FEW STOCKS OF MARICO

INSERT INTO TRANSACTIONS VALUES('TKSST101','KS101',11200,'STOCKS','2024-02-05');

insert into STOCK_BUY VALUES('TKSST101',28,0,'INE196A01026');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TKSST101';

insert into stock_info values('INE196A01026', 'MARICO',497.20,51.21);

insert into STOCKS values('INE196A01026','KS101',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
) WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101')
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101';

-- SELLING A FEW STOCKS OF MARICO 

INSERT INTO TRANSACTIONS VALUES('TSTKS101','KS101',-1200,'STOCKS','2024-02-05');

INSERT INTO STOCK_SELL VALUES('TSTKS101',2,'INE196A01026');
UPDATE STOCK_BUY SET dummy_quantity = 26 WHERE transaction_id = 'TKSST101';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
) WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101')
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101';

-- SELLING A FEW MORE STOCKS OF THE SAME

INSERT INTO TRANSACTIONS VALUES('TSTKS102','KS101',-3200,'STOCKS','2024-02-05');

INSERT INTO STOCK_SELL VALUES('TSTKS102',4,'INE196A01026');

UPDATE STOCK_BUY SET dummy_quantity = 22 WHERE transaction_id = 'TKSST101';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101')
) WHERE ISIN = 'INE196A01026' AND portfolio_id = 'KS101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101')
WHERE STOCKS.ISIN = 'INE196A01026' AND PORTFOLIO_ID = 'KS101';

-- BUYING STOCKS OF TCS FOR SV102

INSERT INTO TRANSACTIONS VALUES('TSVST301','SV102',63000,'STOCKS','2024-02-15');

insert into STOCK_BUY VALUES('TSVST301',18,0,'INE467B01029');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSVST301';

insert into stock_info values('INE467B01029', 'TCS',3876.30,34.87);

insert into STOCKS values('INE467B01029','SV102',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
) WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE467B01029' AND PORTFOLIO_ID = 'SV102')
WHERE STOCKS.ISIN = 'INE467B01029' AND PORTFOLIO_ID = 'SV102';

-- BUYING MORE STOCKS OF TCS

INSERT INTO TRANSACTIONS VALUES('TSVST302','SV102',43400,'STOCKS','2024-02-15');

insert into STOCK_BUY VALUES('TSVST302',14,0,'INE467B01029');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSVST302';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102')
) WHERE ISIN = 'INE467B01029' AND portfolio_id = 'SV102';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE467B01029' AND PORTFOLIO_ID = 'SV102')
WHERE STOCKS.ISIN = 'INE467B01029' AND PORTFOLIO_ID = 'SV102';

-- BUYING STOCKS OF TATA MOTORS

INSERT INTO TRANSACTIONS VALUES('TSPST101','SP101',90000,'STOCKS','2024-01-29');

insert into STOCK_BUY VALUES('TSPST101',75,0,'INE155A01022');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TSPST101';

insert into stock_info values('INE155A01022', 'TATA MOTORS',992.80,92.81);

insert into STOCKS values('INE155A01022','SP101',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
) WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE155A01022' AND PORTFOLIO_ID = 'SP101')
WHERE STOCKS.ISIN = 'INE155A01022' AND PORTFOLIO_ID = 'SP101';

-- SELLING STOCKS OF TATA FOR SP101

INSERT INTO TRANSACTIONS VALUES('TSTSP101','SP101',-37500,'STOCKS','2024-01-29');

INSERT INTO STOCK_SELL VALUES('TSTSP101',25,'INE155A01022');

UPDATE STOCK_BUY SET dummy_quantity = 50 WHERE transaction_id = 'TSPST101';

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101')
) WHERE ISIN = 'INE155A01022' AND portfolio_id = 'SP101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE155A01022' AND PORTFOLIO_ID = 'SP101')
WHERE STOCKS.ISIN = 'INE155A01022' AND PORTFOLIO_ID = 'SP101';

-- BUYING STOCKS OF JUBILANT FOOD

INSERT INTO TRANSACTIONS VALUES('TCKST101','CK101',27950,'STOCKS','2024-01-27');

insert into STOCK_BUY VALUES('TCKST101',75,0,'INE797F01020');
UPDATE STOCK_BUY SET DUMMY_QUANTITY = QUANTITY WHERE TRANSACTION_ID = 'TCKST101';

insert into stock_info values('INE797F01020', 'JUBILANT FOOD',448.85,66.54);

insert into STOCKS values('INE797F01020','CK101',0,0,0);

UPDATE STOCKS SET total_quantity = 
(SELECT SUM(DUMMY_QUANTITY) FROM STOCK_BUY JOIN TRANSACTIONS ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID 
WHERE ISIN = 'INE797F01020' AND portfolio_id = 'CK101')
WHERE ISIN = 'INE797F01020' AND portfolio_id = 'CK101';

UPDATE STOCKS SET average_price_per_share = (
  SELECT ROUND(SUM(PRICE_PER_SHARE*dummy_quantity)/total_quantity,2) FROM
(
  SELECT AMOUNT/QUANTITY AS PRICE_PER_SHARE, dummy_quantity FROM (
  SELECT * FROM 
TRANSACTIONS 
JOIN STOCK_BUY 
ON STOCK_BUY.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
WHERE ISIN = 'INE797F01020' AND portfolio_id = 'CK101')
WHERE ISIN = 'INE797F01020' AND portfolio_id = 'CK101')
) WHERE ISIN = 'INE797F01020' AND portfolio_id = 'CK101';

UPDATE STOCKS 
SET net_gain = 
(SELECT ROUND((current_value-average_price_per_share)*total_quantity,2) FROM STOCKS JOIN STOCK_INFO ON STOCKS.ISIN = STOCK_INFO.ISIN
WHERE STOCKS.ISIN = 'INE797F01020' AND PORTFOLIO_ID = 'CK101')
WHERE STOCKS.ISIN = 'INE797F01020' AND PORTFOLIO_ID = 'CK101';

-- STOCKS TABLE FINALLY

 




-- TRANSACTIONS AFTER STOCKS

 

-- STOCK_BUY AFTER STOCKS

 
-- STOCK_SELL AFTER STOCKS

 

-- STOCK_INFO AFTER STOCKS

 


-- making some fixed deposits

insert into FIXED_DEPOSITS values('2024-01-08','APP1224323408',3,'HDFC',7.8,'AP101',34730);
insert into FIXED_DEPOSITS values('2024-02-08','APP1224323408',4,'HDFC',9.4,'AP102',349734);
insert into FIXED_DEPOSITS values('2024-01-19','SV24240834142',2,'HDFC',9.3,'SV101',65424);
insert into FIXED_DEPOSITS values('2024-02-23','SV24240834142',1.5,'HDFC',8.8,'SV102',87398);
insert into FIXED_DEPOSITS values('2024-01-14','KSHR23R934934',2.5,'ICICI',7.4,'KS101',384713);
insert into FIXED_DEPOSITS values('2024-02-13','SP48134OU4359',1,'SBI',8.7,'SP101',7987953);
insert into FIXED_DEPOSITS values('2024-03-07','CK3483Y494135',7,'PNB',9.1,'CK101',2373429);
insert into FIXED_DEPOSITS values('2024-03-08','APP3314344455',6,'HDFC',9.8,'AP102',631876);
-- SELECT * FROM FIXED_DEPOSITS

 

-- making some government bonds

insert into GOVT_BONDS VALUES('SGB101','2024-02-18',98000,2,14.2,'AP101');
insert into GOVT_BONDS VALUES('SGB102','2024-03-18',34000,2.5,11.7,'SV101');
insert into GOVT_BONDS VALUES('NPS101','2024-03-11',111000,11,14.4,'AP102');
insert into GOVT_BONDS VALUES('FRN101','2024-01-17',18000,2,9.1,'KS101');
insert into GOVT_BONDS VALUES('TBS101','2024-03-22',45000,3,6.8,'SP101');
insert into GOVT_BONDS VALUES('TIPS101','2024-03-29',42000,4,15.2,'CK101');
insert into GOVT_BONDS VALUES('NPS102','2024-01-25',131000,12,13.7,'SV102');

-- SELECT * FROM GOVT_BONDS

 
-- RETURNS ON FIXED_DEPOSITS FOR EACH FD AT THE END OF TENURE

SELECT account_no, 
portfolio_id,
amount AS PRINCIPAL_AMOUNT,
ROUND((AMOUNT*POWER(1+return_on_investment*0.01,duration)- AMOUNT),2) AS RETURNS
FROM FIXED_DEPOSITS;

 

-- RETURNS ON GOVT_BONDS FOR EACH GB AT THE END OF TENURE

SELECT BOND_ID, 
portfolio_id,
amount AS PRINCIPAL_AMOUNT,
ROUND((AMOUNT*POWER(1+return_on_investment*0.01,duration)- AMOUNT),2) AS RETURNS
FROM GOVT_BONDS;

 




-- TOTAL RETURNS FOR A USER FROM ALL THE FIXED_DEPOSITS IN HIS PORTFOLIOS

SELECT USER.NAME AS USERNAME, ROUND(SUM(ROUND((AMOUNT*POWER(1+return_on_investment*0.01,duration)- AMOUNT),2)),2) AS TOTAL_RETURNS FROM 
FIXED_DEPOSITS JOIN PORTFOLIO ON FIXED_DEPOSITS.PORTFOLIO_ID = PORTFOLIO.PORTFOLIO_ID 
JOIN USER ON PORTFOLIO.PAN_ID = USER.PAN_ID
WHERE USER.NAME = 'ARYAN PATIL';

 

-- TOTAL RETURNS FOR A USER FROM ALL THE GOVT_BONDS IN HIS PORTFOLIOS

SELECT USER.NAME AS USERNAME, ROUND(SUM(ROUND((AMOUNT*POWER(1+return_on_investment*0.01,duration)- AMOUNT),2)),2) AS TOTAL_RETURNS FROM 
GOVT_BONDS JOIN PORTFOLIO ON GOVT_BONDS.PORTFOLIO_ID = PORTFOLIO.PORTFOLIO_ID 
JOIN USER ON PORTFOLIO.PAN_ID = USER.PAN_ID
WHERE USER.NAME = 'SHRUTI VANKA';

 

--INITIALIZE SCHEMES TABLE WITH MUTUAL FUNDS SCHEMES
INSERT INTO SCHEMES VALUES(120,'Kotak Smallcap Fund'),
  (111,'Quant Mid Cap Fund'),
                          (99,'SBI Large Cap Fund');
 
--1
--buy 100 units of Kotak Smallcap Fund
insert into TRANSACTIONS values('TKSMF100','KS101',12000,'mutual funds','2023-12-29');
 
insert into MUTUAL_FUNDS values(100,'Kotak Smallcap Fund','2023-12-29','KOTKS101','KS101');
insert into sip values('2023-12-29',100,100,120,'KOTKS101','KS101');
update schemes set current_nav=118 where debt_issuer='Kotak Smallcap Fund';
insert into sip values('2024-01-18',101.695,101.695,118,'KOTKS101','KS101');
update MUTUAL_FUNDS set balance_units=balance_units+101.695 where folio_id='KOTKS101';
update schemes set current_nav=110 where debt_issuer='Kotak Smallcap Fund';
--TOP-UPS FOR LUMPSUMS INCLUDED IN SIP TABLE
insert into sip values('2024-01-22',40,40,110,'KOTKS101','KS101');
update MUTUAL_FUNDS set balance_units=balance_units+40 where folio_id='KOTKS101';
--MUTUAL_FUNDS AFTER ALL TRANSACTIONS PERTAINING TO ABOVE PORTFOLIO
  
--2
--buy 200 units of Quant Mid Cap Fund
insert into TRANSACTIONS values('TAPMF104','AP102',22200,'mutual funds','2023-12-30');
insert into MUTUAL_FUNDS values(200,'Quant Mid Cap Fund','2023-12-30','QUAAP101','AP102');
insert into sip values('2023-12-30',200,200,111,'QUAAP101','AP102');
update schemes set current_nav=100 where debt_issuer='Quant Mid Cap Fund';
insert into sip values('2024-01-29',222,222,100,'QUAAP101','AP102');
update MUTUAL_FUNDS set balance_units=balance_units+222 where folio_id='QUAAP101';
--3 
--buy 180 of SBI Large Cap Fund this transaction is a lumpsum will not have further installments
insert into TRANSACTIONS values('TKSMF105','KS101',17820,'mutual funds','2024-01-8');
insert into MUTUAL_FUNDS values(180,'SBI Large Cap Fund','2024-01-8','SBIKS102','KS101');
--MUTUAL_FUNDS FINAL TABLE
 

--TRANSACTIONS FINAL TABLE( MUTUAL FUND TRANSACTIONS)
 
--SIP TABLE FINAL
 



SELECT * FROM TRANSACTIONS;

select * from STOCKS;

SELECT * FROM STOCK_INFO;

SELECT * FROM STOCK_BUY;

SELECT * FROM STOCK_SELL;

select * from user;

SELECT * FROM PORTFOLIO;

SELECT * FROM FIXED_DEPOSITS;

SELECT * FROM GOVT_BONDS;

